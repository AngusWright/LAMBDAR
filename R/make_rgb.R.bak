make_rgb <-
function (struct=NA, file=NA, points=FALSE, cat=NA, lo=0.4, hi=0.995, log=TRUE, bad=0, flip=FALSE, outpng=NA, r=3, g=2, b=1, title="", ...) {

   if (all(is.na(struct))&(is.na(file))) { stop("No File or Image List Provided") }
   if (!is.na(file)) { struct<-read.fits(file, hdu=0) }
   cols<-rgb(magmap(struct$dat[[r]],bad=bad,lo=lo,hi=hi,log=log,flip=flip,...)$map, 
             magmap(struct$dat[[g]],bad=bad,lo=lo,hi=hi,log=log,flip=flip,...)$map, 
             magmap(struct$dat[[b]],bad=bad,lo=lo,hi=hi,log=log,flip=flip,...)$map) 
   if (!is.na(outpng)) { png(file=outpng, width=max(1200, length(struct$dat[[r]][1,])+100), height=max(1200, length(struct$dat[[r]][1,])+100)) }
   plot.new()
   plot.window(xlim=range(struct$x[[r]],na.rm=TRUE), 
               ylim=range(struct$y[[r]],na.rm=TRUE), 
                asp=1/cos(median(struct$y[[r]], na.rm=TRUE)*pi/180))
   image(x=seq(min(struct$x[[r]]),max(struct$x[[r]]),len=length(struct$x[[r]])),
         y=seq(min(struct$y[[r]]),max(struct$y[[r]]),len=length(struct$y[[r]])),
         z=matrix(1:length(struct$dat[[r]]), ncol=dim(struct$dat[[r]])[2], byrow=T), 
       col=cols, axes=FALSE, add=TRUE, useRaster=TRUE)
   #print(par("usr"))
   plot.window(xlim=c(struct$x[[r]][1],struct$x[[r]][length(struct$x[[r]])]), 
               ylim=c(struct$y[[r]][1],struct$y[[r]][length(struct$y[[r]])]), 
                asp=1/cos(median(struct$y[[r]], na.rm=TRUE)*pi/180))
   magaxis(xlab="RA/deg",ylab="Dec/deg", title=title)
   if (points) {
     if (is.na(cat)) { 
       warning("No CSV Catalogue Supplied with points flag") 
     } else {
       try.load=try(cat<-read.csv(cat))
       if (class(try.load)=='try error') {
         warning("Failed to read points catalogue")
       } else {
         if (is.null(cat$CONTAM)) {
           if (!flip) { points(cat$RA, cat$DEC, cex=magmap(TC41cut[,'R_PETRO'],lo=15,hi=20,range=c(5,3),type='num')$map, col='lightgreen') }
           if ( flip) { points(cat$RA, cat$DEC, cex=magmap(TC41cut[,'R_PETRO'],lo=15,hi=20,range=c(5,3),type='num')$map, col='red'       ) }
         } else {
           if (!flip) { points(cat$RA[which(cat$CONTAM==0)], cat$DEC[which(cat$CONTAM==0)], cex=magmap(TC41cut[,'R_PETRO'],lo=15,hi=20,range=c(5,3),type='num')$map,        col='lightgreen')
                        points(cat$RA[which(cat$CONTAM==1)], cat$DEC[which(cat$CONTAM==1)], cex=magmap(TC41cut[,'R_PETRO'],lo=15,hi=20,range=c(5,3),type='num')$map, pch=4, col='lightgreen') }
           if ( flip) { points(cat$RA[which(cat$CONTAM==0)], cat$DEC[which(cat$CONTAM==0)], cex=magmap(TC41cut[,'R_PETRO'],lo=15,hi=20,range=c(5,3),type='num')$map,        col='red'       ) 
                        points(cat$RA[which(cat$CONTAM==1)], cat$DEC[which(cat$CONTAM==1)], cex=magmap(TC41cut[,'R_PETRO'],lo=15,hi=20,range=c(5,3),type='num')$map, pch=4, col='red'       ) }
         }
       }
     }
   } 
   if (!is.na(outpng)) { dev.off() ; return(NULL) }
   return=list(vals=matrix(1:length(struct$dat[[1]]), ncol=dim(struct$dat[[1]])[2], byrow=T), cols=cols)
}
